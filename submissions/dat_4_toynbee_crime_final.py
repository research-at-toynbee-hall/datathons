# -*- coding: utf-8 -*-
"""dat 4 toynbee crime final.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1HJY4SUA0fI_Xo0-TZHz-STyJiOUmLxLQ
"""

import matplotlib.pyplot as plt #to define plot parameters
import seaborn as sns #to graphical plots
import numpy as np #to math
import pandas as pd
import datetime as dt
import matplotlib.ticker as ticker

crime_df = pd.read_csv('https://raw.githubusercontent.com/research-at-toynbee-hall/datathons/master/datasets/datathon-2019-04-24/crime_in_london/cleaned/long_london_crime_2017-2019.csv')

crime_df['yearmonthday'] = crime_df['year_month'].apply(lambda x: dt.datetime.strptime(x, '%Y-%m-%d'))
crime_df['year'] = crime_df['yearmonthday'].dt.year

#changing the format to datetime so we can plot the chart
crime_df1 = crime_df.copy()
crime_df1.index = pd.to_datetime(crime_df1['yearmonthday'], format = '%Y-%m-%d')

sns.lmplot(x = 'year', y = 'count', data = crime_df1, fit_reg = False, hue = 'count', x_bins = 3, x_ci = None,  legend = False)

#Grouping the crimes by the date
crimes_groupby = crime_df1.groupby([pd.TimeGrouper('2M'), 'MajorText'])
crime_data = crimes_groupby['MajorText'].count().rename('Count')

#Creating a dataframe (for use in plotting) 
crimes_groupby = crime_df1.groupby([pd.TimeGrouper('2M'), 'MajorText'])
crime_data = crimes_groupby['MajorText'].count().rename('Count')
crime_data = crime_data.unstack()

#Plot total of crimes by month
crime_data.plot(figsize=(10,8), cmap='magma')
plt.legend(loc='upper right', frameon=True)
plt.title('Crimes by Month')
plt.tight_layout()
plt.xlabel('Months')
plt.ylabel('Number of Crimes')
ax = plt.gca()
plt.show()

#Graph of all crimes over time
crime_data.plot(figsize=(12, 12), subplots=True, layout=(-1, 3),\
                    cmap='tab10', sharex=False, sharey=False)
plt.show()

#Plot of the number of crimes over time
plt.figure(figsize=(10, 7))
crime_df1.resample('5M').size().plot(legend=False)
plt.title('Number of crimes')
plt.xlabel('M')
plt.ylabel('Crimes')
plt.show()

#Plot of the number of crimes per type of crime
plt.figure(figsize=(10, 7))
crime_df1.groupby([crime_df1['MajorText']]).size().sort_values(ascending=True).plot(kind='barh')
plt.title('Number of Crimes by the type of crime')
plt.ylabel('Type of crime')
plt.xlabel('Number of crime by type')
plt.show()

#Plot of crimes by the day of the week
daysoftheweek = ['Monday','Tuesday','Wednesday',  'Thursday', 'Friday', 'Saturday', 'Sunday']
crime_df1.groupby([crime_df1.index.dayofweek]).size().plot(kind='barh')
plt.ylabel('Days of the week')
plt.yticks(np.arange(7), daysoftheweek)
plt.xlabel('Number of crimes')
plt.title('Crimes by the day of the week')
plt.show()

#Data with only Tower Hamlets - not working for some weird reason.
crime_df_TH = crime_df1
crime_df_TH = crime_df_TH[crime_df_TH['LookUp_BoroughName'] == 'Tower Hamlets']

plt.figure(figsize=(10, 7))
crime_df_TH.groupby([crime_df_TH['MajorText']]).size().sort_values(ascending=True).plot(kind='barh')
plt.title('Number of Crimes by the type of crime (Tower Hamlets)')
plt.ylabel('Type of crime')
plt.xlabel('Number of crime by type')
plt.show()

plt.figure(figsize=(10, 20))
crime_df_TH.groupby([crime_df_TH['MinorText']]).size().sort_values(ascending=True).plot(kind='barh')
plt.title('Number of Crimes by the type of crime (Tower Hamlets)')
plt.ylabel('Type of crime')
plt.xlabel('Number of crime by type')
plt.show()

plt.subplot(2, 1, 2)
#plt.figure(figsize=(10, 20))
crime_df1.groupby([crime_df1['MajorText']]).size().sort_values(ascending=True).plot(kind='barh')
plt.title('Number of Crimes by the type of crime (London)')
plt.ylabel('Type of crime')
plt.xlabel('Number of crime by type')
plt.show()

plt.subplot(2, 1, 2)
#plt.figure(figsize=(10, 20))
crime_df_TH.groupby([crime_df_TH['MajorText']]).size().sort_values(ascending=True).plot(kind='barh')
plt.title('Number of Crimes by the type of crime (Tower Hamlets)')
plt.ylabel('Type of crime')
plt.xlabel('Number of crime by type')
plt.show()
